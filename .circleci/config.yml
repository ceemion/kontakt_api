version: 2
jobs:
  build:
    working_directory: ~/kontakt_api
    docker:
      - image: circleci/ruby:2.4.1-node
        env:
          - PG_HOST=localhost
          - PG_USER=ubuntu
          - RAILS_ENV=test
          - RACK_ENV=test
      - image: circleci/postgres:9.4.12-alpine
        env:
          - POSTGRES_USER=ubuntu
          - POSTGRES_DB=kontakt_api_test
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "Gemfile.lock" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle

      # Store bundle cache
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "Gemfile.lock" }}

      # Database setup
      - type: shell
        name: Set up DB
        environment:
          DATABASE_URL: "postgres://ubuntu@localhost:5432/db_name"
        command: |
          bundle exec rake db:create db:schema:load --trace &&
          bundle exec rake db:migrate

      # Run rspec in parallel
      - type: shell
        command: |
          mkdir /tmp/test-results
          TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings --timings-type=classname)"

          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter -o $CIRCLE_TEST_REPORTS/rspec/junit.xml \
                            --out /tmp/test-results/rspec.xml \
                            --format progress \
                            "${TEST_FILES}"

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results
